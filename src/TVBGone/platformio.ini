; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]

;; esp32 core evilcrowrf hardware
;default_envs = esp32dev
;; esp32 core
; default_envs = mini-epaper-esp32-pico

;; esp32s3 core
default_envs = mini-epaper-s3

[env]
;platform = espressif32@3.5.0
platform = espressif32@^6.0.1
board_build.flash_mode = dio
board_build.f_cpu = 80000000L
board = esp32dev
framework = arduino
platform_packages = 
    platformio/framework-arduinoespressif32@^3.20011.230801
monitor_speed = 38400
lib_deps = 
    crankyoldgit/IRremoteESP8266 @ ^2.8.6
    knolleary/PubSubClient @ ^2.8
    ; gitlab-communication/VEGA_IRremote @ ^1.0.0 ; used by the lilygo IR examples

    ;https://github.com/thesavant42/SmartRC-CC1101-Driver-Lib.git 
    ;me-no-dev/AsyncTCP @ ^1.1.1
    ;me-no-dev/ESP Async WebServer @ ^1.2.3 ; undefined reference to `mbedtls_md5_starts
    ;https://github.com/me-no-dev/ESPAsyncWebServer.git  ; 
    ;ayushsharma82/AsyncElegantOTA @ ^2.2.8
    ;tobozo/ESP32-targz @ ^1.2.0
    ;bblanchon/ArduinoJson @ ^6.21.3
build_flags =
    -mfix-esp32-psram-cache-issue
    -D CONFIG_ASYNC_TCP_USE_WDT=0

[env:esp32dev]
platform = ${env.platform}
board_build.flash_mode = ${env.board_build.flash_mode}
board_build.f_cpu = ${env.board_build.f_cpu}
board = ${env.board}
framework = ${env.framework}
platform_packages = 
    ${env.platform_packages}
monitor_speed = ${env.monitor_speed}
lib_deps = 
    ${env.lib_deps}
build_flags =
    ${env.build_flags}
    '-DSD_SCK_PIN = 18'
    '-DSDCARD_MISO_PIN = 19'
    '-DSDCARD_MOSI_PIN = 23'
    '-DSDCARD_SS_PIN =  22'
    '-DRF_SCK = 14'
    '-DRF_MISO = 12'
    '-DRF_MOSI = 13'
    '-DRF_CS = 5 '
    '-DRF_CS1 = 27'
    '-DRF_GDO0 = 2'
    '-DRF_GDO2 = 4'
    '-DRF2_GDO0 = 25'
    '-DRF2_GDO2 = 26'
    '-DLED = 32'
    '-DBUTTON1 = 34'
    '-DBUTTON2 = 35'

[env:mini-epaper-esp32-pico]
platform = ${env.platform}
board_build.flash_mode = ${env.board_build.flash_mode}
board_build.f_cpu = ${env.board_build.f_cpu}
board = ${env.board}
framework = ${env.framework}
platform_packages = 
    ${env.platform_packages}
monitor_speed = ${env.monitor_speed}
build_flags = ${env.build_flags}
    -mfix-esp32-psram-cache-issue
    '-DLILYGO_MINI_EPAPER_ESP32'
    ;;;; SDFat-beta mods
    '-DSDFAT_FILE_TYPE = 3'
    '-DSDCARD_MISO_PIN = 2'
    '-DSDCARD_MOSI_PIN = 15'
    '-DSDCARD_SCK_PIN = 14'
    '-DSDCARD_SS_PIN = 13'
    ;;; CC1101 Pin defs
    '-DRF_SCK = 26'
    '-DRF_MISO = 38'
    '-DRF_MOSI = 23'
    '-DRF_CS = 25'
    '-DRF_GDO0 = 32'
    '-DRF_GDO2 = 37'
    '-DLED = (0)'
    '-DBUTTON1 = 36'
    '-DBUTTON2 = 39'
    '-DIR_TX_PIN = 12'
    '-DIR_RECEIVE_PIN = 18'
    ;'-DAC_DEBUG' ; Active Connect debug, useful for figuring out why wifi won't work
lib_deps = 
    ${env.lib_deps}
    https://github.com/lewisxhe/GxEPD.git      ; Needed for epaper display
lib_ldf_mode = chain

[env:mini-epaper-s3]
;monitor_speed = 115200
board = mini-epaper-s3
build_flags =
    '-D ARDUINO_USB_CDC_ON_BOOT = 1' ; 0
    -DBOARD_HAS_PSRAM
    -DLILYGO_MINI_EPAPER_ESP32S3
    ;;;; SDFat-beta mods
    '-DSDFAT_FILE_TYPE = 3'
    '-DSDCARD_MISO_PIN = 38'
    '-DSDCARD_MOSI_PIN = 39'
    '-DSDCARD_SCK_PIN = 41'
    '-DSDCARD_SS_PIN = 40'
    ;;; CC1101 Pin defs
    '-DRF_SCK = 8'
    '-DRF_MISO = 6'
    '-DRF_MOSI = 17'
    '-DRF_CS = 7'
    '-DRF_GDO0 = 5'
    '-DRF_GDO2 = 16'
    '-DIR_TX_PIN = 21'
    '-DIR_RECEIVE_PIN = 18'
    '-DCORE_DEBUG_LEVEL = 1'
    '-DLED = (-1)'
    '-DBUTTON1 = 3'
    '-DBUTTON2 = 34'
lib_deps = 
    ${env:mini-epaper-esp32-pico.lib_deps}
lib_ldf_mode = chain